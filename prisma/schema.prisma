// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int              @id @default(autoincrement())
  email         String           @unique
  name          String           @db.VarChar(255)
  password      String
  role          String?          @db.VarChar(255)
  phone         String?          @db.VarChar(255)
  biography     String?
  avatar        String?
  sellerBalance BigInt           @default(0) @map("seller_balance")
  createdAt     DateTime         @default(now()) @map("created_at")
  experiences   UserExperience[]
  services      Service[]

  @@map("users")
}

model UserExperience {
  id         Int    @id @default(autoincrement())
  experience String
  User       User   @relation(fields: [userId], references: [id])
  userId     Int    @map("user_id")

  @@map("user_experiences")
}

model Service {
  id            Int                 @id @default(autoincrement())
  title         String
  description   String
  duration      Int
  revisionLimit Int                 @map("revision_limit")
  price         BigInt
  note          String?
  User          User                @relation(fields: [sellerId], references: [id])
  sellerId      Int                 @map("seller_id")
  isActive      Int                 @default(1) @map("is_active")
  createdAt     DateTime            @default(now()) @map("created_at")
  perks         ServicePerk[]
  sellerPerks   ServiceSellerPerk[]
  taglines      ServiceTagline[]
  images        ServiceImage[]

  @@map("services")
}

model ServicePerk {
  id        Int     @id @default(autoincrement())
  perk      String
  Service   Service @relation(fields: [serviceId], references: [id])
  serviceId Int     @map("service_id")

  @@map("service_perks")
}

model ServiceSellerPerk {
  id        Int     @id @default(autoincrement())
  perk      String
  Service   Service @relation(fields: [serviceId], references: [id])
  serviceId Int     @map("service_id")

  @@map("service_seller_perks")
}

model ServiceTagline {
  id        Int     @id @default(autoincrement())
  tagline   String
  Service   Service @relation(fields: [serviceId], references: [id])
  serviceId Int     @map("service_id")

  @@map("service_taglines")
}

model ServiceImage {
  id        Int     @id @default(autoincrement())
  image     String
  Service   Service @relation(fields: [serviceId], references: [id])
  serviceId Int     @map("service_id")

  @@map("service_images")
}
